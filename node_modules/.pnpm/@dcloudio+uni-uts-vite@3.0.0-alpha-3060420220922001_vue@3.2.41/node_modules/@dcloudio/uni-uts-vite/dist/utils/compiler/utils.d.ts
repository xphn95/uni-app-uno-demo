import type { parse, bundle, UtsTarget } from '@dcloudio/uts';
import { Module } from '../../../types/types';
export declare function getUtsCompiler(): {
    parse: typeof parse;
    bundle: typeof bundle;
    UtsTarget: typeof UtsTarget;
};
export declare function resolvePackage(filename: string): {
    is_uni_modules: boolean;
    name: string;
    namespace: string;
} | undefined;
export interface UTSPlatformResourceOptions {
    inputDir: string;
    outputDir: string;
    platform: typeof process.env.UNI_UTS_PLATFORM;
    extname: '.kt' | '.swift';
}
export declare function genUTSPlatformResource(filename: string, options: UTSPlatformResourceOptions): void;
export declare function resolveAndroidDir(filename: string): string;
export declare function resolveUTSPlatformFile(filename: string, { inputDir, outputDir, platform, extname }: UTSPlatformResourceOptions): string;
export declare function createResolveTypeReferenceName(namespace: string, ast: Module): (name: string) => string;
