import { PresetOptions, Preset } from '@unocss/core';
export { c as colors } from './colors-481709dc.js';
export { t as theme } from './default-43ba8620.js';
import { T as Theme } from './types-55b2aa55.js';
export { T as Theme, a as ThemeAnimation } from './types-55b2aa55.js';
export { p as parseColor } from './utilities-21a42e2d.js';

interface DarkModeSelectors {
    /**
     * Selector for light variant.
     *
     * @default '.light'
     */
    light?: string;
    /**
     * Selector for dark variant.
     *
     * @default '.dark'
     */
    dark?: string;
}
interface PresetWeappOptions extends PresetOptions {
    /**
     * Dark mode options
     *
     */
    dark?: 'class' | 'media' | DarkModeSelectors;
    /**
     * @default false
     */
    attributifyPseudo?: Boolean;
    /**
     * Prefix for CSS variables.
     *
     * @default 'un-'
     */
    variablePrefix?: string;
    /**
     * Utils prefix
     *
     * @default undefined
     */
    prefix?: string;
    /**
     * 是否转换微信class
     *
     * @default true
     */
    transform?: boolean;
    /**
     * 平台
     * @default 'uniapp'
     */
    platform?: 'taro' | 'uniapp';
    /**
     * taro h5 rem 换算尺寸标准
     * @default 750
     * @link https://taro-docs.jd.com/taro/docs/size
     */
    designWidth?: number;
    /**
     * taro 设计稿尺寸换算规则
     * @default { 640: 2.34 / 2, 750: 1, 828: 1.81 / 2}
     * @link https://taro-docs.jd.com/taro/docs/size
     */
    deviceRatio?: {
        [key: number]: number;
    };
    /**
     * taro webpack 版本
     * taro webpack4 和 webpack5 h5根字体大小，导致不同版本 rem 不一致
     * 见下面issues
     * @link https://github.com/NervJS/taro/issues/12361
     * @default webpack4
     */
    taroWebpack?: 'webpack4' | 'webpack5';
    /**
     * 是否为h5
     * @default false
     */
    isH5?: boolean;
    /**
     * 自定义转换规则
     * @default https://github.com/MellowCo/unplugin-transform-class#options
     */
    transformRules?: Record<string, string>;
}
declare const pxRE: RegExp;
declare const rpxRE: RegExp;
declare const rpxOrPxRE: RegExp;
declare const presetWeapp: (options?: PresetWeappOptions) => Preset<Theme>;

export { DarkModeSelectors, PresetWeappOptions, presetWeapp as default, presetWeapp, pxRE, rpxOrPxRE, rpxRE };
